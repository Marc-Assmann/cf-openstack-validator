---
custom:
  tags:
    default: &tags []
    suse-liberty: ['suse-liberty']
    suse-mitaka: ['suse-mitaka']
    suse-newton: ['suse-newton']
    blue-box: ['blue-box']
  timeouts:
    long: &timeouts-long 2h
  build_logs_to_retain: &build_logs_to_retain 500

groups:
- name: {{pipeline_name}}
  jobs:
  - cleanup
  - test
  - validate
  - release

jobs:
- name: cleanup
  serial: true
  serial_groups: [openstack-project]
  build_logs_to_retain: *build_logs_to_retain
  plan:
    - aggregate:
      - {trigger: true, get: validator-src,   tags: *tags, timeout: *timeouts-long}
      - {trigger: true, get: pipeline-time-trigger,   tags: *tags, timeout: *timeouts-long}

    - task: cleanup
      tags: *tags
      timeout: *timeouts-long
      file: validator-src/ci/tasks/cleanup.yml
      params:
        BOSH_OPENSTACK_DOMAIN_NAME:          {{domain}}
        BOSH_OPENSTACK_AUTH_URL:             {{auth_url}}
        BOSH_OPENSTACK_USERNAME:             {{username}}
        BOSH_OPENSTACK_API_KEY:              {{api_key}}
        BOSH_OPENSTACK_PROJECT:              {{project}}
        BOSH_OPENSTACK_CA_CERT:              {{ca_cert}}

- name: test
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - get: pipeline-time-trigger
    trigger: true
    tags: *tags
    timeout: *timeouts-long
  - get: validator-src
    trigger: true
    tags: *tags
    timeout: *timeouts-long
  - task: validate
    tags: *tags
    timeout: *timeouts-long
    file: validator-src/ci/tasks/test.yml

- name: validate
  serial: true
  serial_groups: [openstack-project]
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - get: validator-src
    passed: [cleanup, test]
    trigger: true
    tags: *tags
    timeout: *timeouts-long
  - get: pipeline-time-trigger
    passed: [cleanup, test]
    trigger: true
    tags: *tags
    timeout: *timeouts-long
  - task: validate
    tags: *tags
    timeout: *timeouts-long
    file: validator-src/ci/tasks/validate.yml
    params:
      USERNAME:                       {{username}}
      AUTH_URL:                       {{auth_url}}
      API_KEY:                        {{api_key}}
      DOMAIN:                         {{domain}}
      PROJECT:                        {{project}}
      PROJECT_ID:                     {{project_id}}
      DEFAULT_KEY_NAME:               {{default_key_name}}
      NETWORK_ID:                     {{network_id}}
      FLOATING_IP:                    {{floating_ip}}
      STATIC_IP:                      {{static_ip}}
      PUBLIC_IMAGE_ID:                {{public_image_id}}
      PRIVATE_KEY:                    {{private_key}}
      INSTANCE_TYPE:                  {{instance_type}}
      NTP_SERVER:                     {{ntp_server}}
      CA_CERT:                        {{ca_cert}}
      AVAILABILITY_ZONE:              {{availability_zone}}
      OBJECT_STORAGE:                 {{object_storage}}
      OBJECT_STORAGE_TEMP_URL_KEY:    {{object_storage_temp_url_key}}
      EXPECTED_FLAVORS:               {{expected_flavors}}
      EXPECTED_QUOTAS:                {{expected_quotas}}
      EXPECTED_ENDPOINTS:             {{expected_endpoints}}
      INFLUXDB_IP:                    {{influxdb_ip}}
      INFLUXDB_PORT:                  8086
      INFLUXDB_USER:                  admin
      INFLUXDB_PASSWORD:              {{influxdb_password}}
      PIPELINE_NAME:                  {{pipeline_name}}

- name: release
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - aggregate:
    - {get: validator-src, passed: [validate], tags: *tags, timeout: *timeouts-long }
    - {get: release-semver, tags: *tags, timeout: *timeouts-long }

  - task: generate-commitish
    tags: *tags
    timeout: *timeouts-long
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: boshcpi/openstack-cpi-release}
      inputs:
      - name: validator-src
      outputs:
      - name: generated-commitish
      run:
        path: sh
        args:
        - -c
        - "git -C validator-src rev-parse HEAD > generated-commitish/commitish && echo 'Commitish to release:' $(cat generated-commitish/commitish)"

  - put: gh-release
    tags: *tags
    timeout: *timeouts-long
    params:
      name: release-semver/version
      tag: release-semver/version
      tag_prefix: v
      commitish: generated-commitish/commitish

  - put: release-semver
    tags: *tags
    timeout: *timeouts-long
    params: { bump: minor }

resources:
- name: validator-src
  type: git
  tags: *tags
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-openstack-validator
    branch: master
- name: gh-release
  type: github-release
  tags: *tags
  source:
    user: cloudfoundry-incubator
    repository: cf-openstack-validator
    access_token: {{github_release_access_token}}
- name: release-semver
  type: semver
  tags: *tags
  source:
    initial_version: 1.0.0
    driver: git
    uri: git@github.com:cloudfoundry-incubator/cf-openstack-validator.git
    branch: release-semver
    file: VERSION
    private_key: {{validator_github_private_key}}
- name: pipeline-time-trigger
  type: time
  tags: *tags
  source:
    interval: 1h
